buildscript {
    repositories {
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }

    dependencies {
        classpath('org.springframework.build.gradle:propdeps-plugin:0.0.7')
        classpath('io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE')
        classpath('io.spring.gradle:spring-io-plugin:0.0.8.RELEASE')
        classpath('io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

ext {
    cfEnvVersion = '1.0.1.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "io.pivotal.cfenv:java-cfenv:$cfEnvVersion"
    compile "io.pivotal.cfenv:java-cfenv-boot:$cfEnvVersion"
    testCompile "io.pivotal.cfenv:java-cfenv-test-support:$cfEnvVersion"
}


javadoc {
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.author = true
    options.header = project.name
}

task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives packageSources
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

archivesBaseName = 'spring-cloud-sso-connector'
group = 'io.pivotal.spring.cloud'

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

install {
    repositories.mavenInstaller {
        configurePom(pom)
    }
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        configurePom(pom)
    }
}

nexusStaging {
    packageGroup = 'io.pivotal'
}

private void configurePom(pom) {
    pom.whenConfigured { p ->
        p.dependencies = p.dependencies.findAll { dep -> dep.scope != 'test' }
    }

    pom.project {
        name 'Spring Cloud SSO Connector'
        description 'Spring Cloud Connector Extension for Single Sign-On Service on Pivotal Cloud Foundry'
        url 'https://github.com/pivotal-cf/spring-cloud-sso-connector/'
        inceptionYear '2015'
        licenses {
            license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'jar'
            }
        }
        scm {
            connection 'scm:git:git@github.com:pivotal-cf/spring-cloud-sso-connector.git'
            developerConnection 'scm:git:git@github.com:pivotal-cf/spring-cloud-sso-connector.git'
            url 'https://github.com/pivotal-cf/spring-cloud-sso-connector/'
        }
        developers {
            developer {
                organization 'Pivotal Software Inc'
                organizationUrl 'https://pivotal.io'
            }
        }
    }
}